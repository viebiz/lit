// Code generated by mockery. DO NOT EDIT.

package lit

import (
	bufio "bufio"
	http "net/http"

	mock "github.com/stretchr/testify/mock"

	net "net"
)

// MockResponseWriter is an autogenerated mock type for the ResponseWriter type
type MockResponseWriter struct {
	mock.Mock
}

type MockResponseWriter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockResponseWriter) EXPECT() *MockResponseWriter_Expecter {
	return &MockResponseWriter_Expecter{mock: &_m.Mock}
}

// CloseNotify provides a mock function with no fields
func (_m *MockResponseWriter) CloseNotify() <-chan bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for CloseNotify")
	}

	var r0 <-chan bool
	if rf, ok := ret.Get(0).(func() <-chan bool); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan bool)
		}
	}

	return r0
}

// MockResponseWriter_CloseNotify_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CloseNotify'
type MockResponseWriter_CloseNotify_Call struct {
	*mock.Call
}

// CloseNotify is a helper method to define mock.On call
func (_e *MockResponseWriter_Expecter) CloseNotify() *MockResponseWriter_CloseNotify_Call {
	return &MockResponseWriter_CloseNotify_Call{Call: _e.mock.On("CloseNotify")}
}

func (_c *MockResponseWriter_CloseNotify_Call) Run(run func()) *MockResponseWriter_CloseNotify_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockResponseWriter_CloseNotify_Call) Return(_a0 <-chan bool) *MockResponseWriter_CloseNotify_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockResponseWriter_CloseNotify_Call) RunAndReturn(run func() <-chan bool) *MockResponseWriter_CloseNotify_Call {
	_c.Call.Return(run)
	return _c
}

// Flush provides a mock function with no fields
func (_m *MockResponseWriter) Flush() {
	_m.Called()
}

// MockResponseWriter_Flush_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Flush'
type MockResponseWriter_Flush_Call struct {
	*mock.Call
}

// Flush is a helper method to define mock.On call
func (_e *MockResponseWriter_Expecter) Flush() *MockResponseWriter_Flush_Call {
	return &MockResponseWriter_Flush_Call{Call: _e.mock.On("Flush")}
}

func (_c *MockResponseWriter_Flush_Call) Run(run func()) *MockResponseWriter_Flush_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockResponseWriter_Flush_Call) Return() *MockResponseWriter_Flush_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockResponseWriter_Flush_Call) RunAndReturn(run func()) *MockResponseWriter_Flush_Call {
	_c.Run(run)
	return _c
}

// Header provides a mock function with no fields
func (_m *MockResponseWriter) Header() http.Header {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Header")
	}

	var r0 http.Header
	if rf, ok := ret.Get(0).(func() http.Header); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(http.Header)
		}
	}

	return r0
}

// MockResponseWriter_Header_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Header'
type MockResponseWriter_Header_Call struct {
	*mock.Call
}

// Header is a helper method to define mock.On call
func (_e *MockResponseWriter_Expecter) Header() *MockResponseWriter_Header_Call {
	return &MockResponseWriter_Header_Call{Call: _e.mock.On("Header")}
}

func (_c *MockResponseWriter_Header_Call) Run(run func()) *MockResponseWriter_Header_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockResponseWriter_Header_Call) Return(_a0 http.Header) *MockResponseWriter_Header_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockResponseWriter_Header_Call) RunAndReturn(run func() http.Header) *MockResponseWriter_Header_Call {
	_c.Call.Return(run)
	return _c
}

// Hijack provides a mock function with no fields
func (_m *MockResponseWriter) Hijack() (net.Conn, *bufio.ReadWriter, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Hijack")
	}

	var r0 net.Conn
	var r1 *bufio.ReadWriter
	var r2 error
	if rf, ok := ret.Get(0).(func() (net.Conn, *bufio.ReadWriter, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() net.Conn); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(net.Conn)
		}
	}

	if rf, ok := ret.Get(1).(func() *bufio.ReadWriter); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*bufio.ReadWriter)
		}
	}

	if rf, ok := ret.Get(2).(func() error); ok {
		r2 = rf()
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// MockResponseWriter_Hijack_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Hijack'
type MockResponseWriter_Hijack_Call struct {
	*mock.Call
}

// Hijack is a helper method to define mock.On call
func (_e *MockResponseWriter_Expecter) Hijack() *MockResponseWriter_Hijack_Call {
	return &MockResponseWriter_Hijack_Call{Call: _e.mock.On("Hijack")}
}

func (_c *MockResponseWriter_Hijack_Call) Run(run func()) *MockResponseWriter_Hijack_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockResponseWriter_Hijack_Call) Return(_a0 net.Conn, _a1 *bufio.ReadWriter, _a2 error) *MockResponseWriter_Hijack_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *MockResponseWriter_Hijack_Call) RunAndReturn(run func() (net.Conn, *bufio.ReadWriter, error)) *MockResponseWriter_Hijack_Call {
	_c.Call.Return(run)
	return _c
}

// Pusher provides a mock function with no fields
func (_m *MockResponseWriter) Pusher() http.Pusher {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Pusher")
	}

	var r0 http.Pusher
	if rf, ok := ret.Get(0).(func() http.Pusher); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(http.Pusher)
		}
	}

	return r0
}

// MockResponseWriter_Pusher_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Pusher'
type MockResponseWriter_Pusher_Call struct {
	*mock.Call
}

// Pusher is a helper method to define mock.On call
func (_e *MockResponseWriter_Expecter) Pusher() *MockResponseWriter_Pusher_Call {
	return &MockResponseWriter_Pusher_Call{Call: _e.mock.On("Pusher")}
}

func (_c *MockResponseWriter_Pusher_Call) Run(run func()) *MockResponseWriter_Pusher_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockResponseWriter_Pusher_Call) Return(_a0 http.Pusher) *MockResponseWriter_Pusher_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockResponseWriter_Pusher_Call) RunAndReturn(run func() http.Pusher) *MockResponseWriter_Pusher_Call {
	_c.Call.Return(run)
	return _c
}

// Size provides a mock function with no fields
func (_m *MockResponseWriter) Size() int {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Size")
	}

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// MockResponseWriter_Size_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Size'
type MockResponseWriter_Size_Call struct {
	*mock.Call
}

// Size is a helper method to define mock.On call
func (_e *MockResponseWriter_Expecter) Size() *MockResponseWriter_Size_Call {
	return &MockResponseWriter_Size_Call{Call: _e.mock.On("Size")}
}

func (_c *MockResponseWriter_Size_Call) Run(run func()) *MockResponseWriter_Size_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockResponseWriter_Size_Call) Return(_a0 int) *MockResponseWriter_Size_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockResponseWriter_Size_Call) RunAndReturn(run func() int) *MockResponseWriter_Size_Call {
	_c.Call.Return(run)
	return _c
}

// Status provides a mock function with no fields
func (_m *MockResponseWriter) Status() int {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Status")
	}

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// MockResponseWriter_Status_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Status'
type MockResponseWriter_Status_Call struct {
	*mock.Call
}

// Status is a helper method to define mock.On call
func (_e *MockResponseWriter_Expecter) Status() *MockResponseWriter_Status_Call {
	return &MockResponseWriter_Status_Call{Call: _e.mock.On("Status")}
}

func (_c *MockResponseWriter_Status_Call) Run(run func()) *MockResponseWriter_Status_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockResponseWriter_Status_Call) Return(_a0 int) *MockResponseWriter_Status_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockResponseWriter_Status_Call) RunAndReturn(run func() int) *MockResponseWriter_Status_Call {
	_c.Call.Return(run)
	return _c
}

// Write provides a mock function with given fields: _a0
func (_m *MockResponseWriter) Write(_a0 []byte) (int, error) {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Write")
	}

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func([]byte) (int, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func([]byte) int); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func([]byte) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockResponseWriter_Write_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Write'
type MockResponseWriter_Write_Call struct {
	*mock.Call
}

// Write is a helper method to define mock.On call
//   - _a0 []byte
func (_e *MockResponseWriter_Expecter) Write(_a0 interface{}) *MockResponseWriter_Write_Call {
	return &MockResponseWriter_Write_Call{Call: _e.mock.On("Write", _a0)}
}

func (_c *MockResponseWriter_Write_Call) Run(run func(_a0 []byte)) *MockResponseWriter_Write_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]byte))
	})
	return _c
}

func (_c *MockResponseWriter_Write_Call) Return(_a0 int, _a1 error) *MockResponseWriter_Write_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockResponseWriter_Write_Call) RunAndReturn(run func([]byte) (int, error)) *MockResponseWriter_Write_Call {
	_c.Call.Return(run)
	return _c
}

// WriteHeader provides a mock function with given fields: statusCode
func (_m *MockResponseWriter) WriteHeader(statusCode int) {
	_m.Called(statusCode)
}

// MockResponseWriter_WriteHeader_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteHeader'
type MockResponseWriter_WriteHeader_Call struct {
	*mock.Call
}

// WriteHeader is a helper method to define mock.On call
//   - statusCode int
func (_e *MockResponseWriter_Expecter) WriteHeader(statusCode interface{}) *MockResponseWriter_WriteHeader_Call {
	return &MockResponseWriter_WriteHeader_Call{Call: _e.mock.On("WriteHeader", statusCode)}
}

func (_c *MockResponseWriter_WriteHeader_Call) Run(run func(statusCode int)) *MockResponseWriter_WriteHeader_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *MockResponseWriter_WriteHeader_Call) Return() *MockResponseWriter_WriteHeader_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockResponseWriter_WriteHeader_Call) RunAndReturn(run func(int)) *MockResponseWriter_WriteHeader_Call {
	_c.Run(run)
	return _c
}

// WriteHeaderNow provides a mock function with no fields
func (_m *MockResponseWriter) WriteHeaderNow() {
	_m.Called()
}

// MockResponseWriter_WriteHeaderNow_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteHeaderNow'
type MockResponseWriter_WriteHeaderNow_Call struct {
	*mock.Call
}

// WriteHeaderNow is a helper method to define mock.On call
func (_e *MockResponseWriter_Expecter) WriteHeaderNow() *MockResponseWriter_WriteHeaderNow_Call {
	return &MockResponseWriter_WriteHeaderNow_Call{Call: _e.mock.On("WriteHeaderNow")}
}

func (_c *MockResponseWriter_WriteHeaderNow_Call) Run(run func()) *MockResponseWriter_WriteHeaderNow_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockResponseWriter_WriteHeaderNow_Call) Return() *MockResponseWriter_WriteHeaderNow_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockResponseWriter_WriteHeaderNow_Call) RunAndReturn(run func()) *MockResponseWriter_WriteHeaderNow_Call {
	_c.Run(run)
	return _c
}

// WriteString provides a mock function with given fields: _a0
func (_m *MockResponseWriter) WriteString(_a0 string) (int, error) {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for WriteString")
	}

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (int, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(string) int); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockResponseWriter_WriteString_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteString'
type MockResponseWriter_WriteString_Call struct {
	*mock.Call
}

// WriteString is a helper method to define mock.On call
//   - _a0 string
func (_e *MockResponseWriter_Expecter) WriteString(_a0 interface{}) *MockResponseWriter_WriteString_Call {
	return &MockResponseWriter_WriteString_Call{Call: _e.mock.On("WriteString", _a0)}
}

func (_c *MockResponseWriter_WriteString_Call) Run(run func(_a0 string)) *MockResponseWriter_WriteString_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockResponseWriter_WriteString_Call) Return(_a0 int, _a1 error) *MockResponseWriter_WriteString_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockResponseWriter_WriteString_Call) RunAndReturn(run func(string) (int, error)) *MockResponseWriter_WriteString_Call {
	_c.Call.Return(run)
	return _c
}

// Written provides a mock function with no fields
func (_m *MockResponseWriter) Written() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Written")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockResponseWriter_Written_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Written'
type MockResponseWriter_Written_Call struct {
	*mock.Call
}

// Written is a helper method to define mock.On call
func (_e *MockResponseWriter_Expecter) Written() *MockResponseWriter_Written_Call {
	return &MockResponseWriter_Written_Call{Call: _e.mock.On("Written")}
}

func (_c *MockResponseWriter_Written_Call) Run(run func()) *MockResponseWriter_Written_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockResponseWriter_Written_Call) Return(_a0 bool) *MockResponseWriter_Written_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockResponseWriter_Written_Call) RunAndReturn(run func() bool) *MockResponseWriter_Written_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockResponseWriter creates a new instance of MockResponseWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockResponseWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockResponseWriter {
	mock := &MockResponseWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
