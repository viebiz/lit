// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        (unknown)
// source: grpcclient/testdata/weather.proto

package testdata

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WeatherRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Location      string                 `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"` // e.g., city name or coordinates
	Date          string                 `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`         // Optional: date in YYYY-MM-DD format
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WeatherRequest) Reset() {
	*x = WeatherRequest{}
	mi := &file_grpcclient_testdata_weather_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeatherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherRequest) ProtoMessage() {}

func (x *WeatherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcclient_testdata_weather_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherRequest.ProtoReflect.Descriptor instead.
func (*WeatherRequest) Descriptor() ([]byte, []int) {
	return file_grpcclient_testdata_weather_proto_rawDescGZIP(), []int{0}
}

func (x *WeatherRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *WeatherRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type WeatherResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	WeatherDetails []*WeatherDetail       `protobuf:"bytes,1,rep,name=weather_details,json=weatherDetails,proto3" json:"weather_details,omitempty"` // List of weather details
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WeatherResponse) Reset() {
	*x = WeatherResponse{}
	mi := &file_grpcclient_testdata_weather_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeatherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherResponse) ProtoMessage() {}

func (x *WeatherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcclient_testdata_weather_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherResponse.ProtoReflect.Descriptor instead.
func (*WeatherResponse) Descriptor() ([]byte, []int) {
	return file_grpcclient_testdata_weather_proto_rawDescGZIP(), []int{1}
}

func (x *WeatherResponse) GetWeatherDetails() []*WeatherDetail {
	if x != nil {
		return x.WeatherDetails
	}
	return nil
}

type WeatherDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Location      string                 `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`         // Location name
	Date          string                 `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`                 // Date of the weather info
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`   // Weather description, e.g., "Sunny", "Rainy"
	Temperature   float32                `protobuf:"fixed32,4,opt,name=temperature,proto3" json:"temperature,omitempty"` // Temperature in Celsius
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WeatherDetail) Reset() {
	*x = WeatherDetail{}
	mi := &file_grpcclient_testdata_weather_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeatherDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherDetail) ProtoMessage() {}

func (x *WeatherDetail) ProtoReflect() protoreflect.Message {
	mi := &file_grpcclient_testdata_weather_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherDetail.ProtoReflect.Descriptor instead.
func (*WeatherDetail) Descriptor() ([]byte, []int) {
	return file_grpcclient_testdata_weather_proto_rawDescGZIP(), []int{2}
}

func (x *WeatherDetail) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *WeatherDetail) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *WeatherDetail) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WeatherDetail) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

var File_grpcclient_testdata_weather_proto protoreflect.FileDescriptor

var file_grpcclient_testdata_weather_proto_rawDesc = []byte{
	0x0a, 0x21, 0x67, 0x72, 0x70, 0x63, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x65, 0x73,
	0x74, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x22, 0x40, 0x0a, 0x0e,
	0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x52,
	0x0a, 0x0f, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x0f, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x2e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x0e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x0d, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x32, 0x99, 0x01, 0x0a, 0x0e, 0x57, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x2e,
	0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x2e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x12, 0x17, 0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x57, 0x65, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x77, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x2e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x30, 0x01, 0x42, 0x8b, 0x01, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x42, 0x0c, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x62, 0x69, 0x7a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x2f, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f,
	0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0xa2, 0x02, 0x03, 0x57, 0x58, 0x58, 0xaa, 0x02,
	0x07, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0xca, 0x02, 0x07, 0x57, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0xe2, 0x02, 0x13, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x07, 0x57, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpcclient_testdata_weather_proto_rawDescOnce sync.Once
	file_grpcclient_testdata_weather_proto_rawDescData = file_grpcclient_testdata_weather_proto_rawDesc
)

func file_grpcclient_testdata_weather_proto_rawDescGZIP() []byte {
	file_grpcclient_testdata_weather_proto_rawDescOnce.Do(func() {
		file_grpcclient_testdata_weather_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpcclient_testdata_weather_proto_rawDescData)
	})
	return file_grpcclient_testdata_weather_proto_rawDescData
}

var file_grpcclient_testdata_weather_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_grpcclient_testdata_weather_proto_goTypes = []any{
	(*WeatherRequest)(nil),  // 0: weather.WeatherRequest
	(*WeatherResponse)(nil), // 1: weather.WeatherResponse
	(*WeatherDetail)(nil),   // 2: weather.WeatherDetail
}
var file_grpcclient_testdata_weather_proto_depIdxs = []int32{
	2, // 0: weather.WeatherResponse.weather_details:type_name -> weather.WeatherDetail
	0, // 1: weather.WeatherService.GetWeatherInfo:input_type -> weather.WeatherRequest
	0, // 2: weather.WeatherService.StreamWeather:input_type -> weather.WeatherRequest
	1, // 3: weather.WeatherService.GetWeatherInfo:output_type -> weather.WeatherResponse
	2, // 4: weather.WeatherService.StreamWeather:output_type -> weather.WeatherDetail
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_grpcclient_testdata_weather_proto_init() }
func file_grpcclient_testdata_weather_proto_init() {
	if File_grpcclient_testdata_weather_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpcclient_testdata_weather_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpcclient_testdata_weather_proto_goTypes,
		DependencyIndexes: file_grpcclient_testdata_weather_proto_depIdxs,
		MessageInfos:      file_grpcclient_testdata_weather_proto_msgTypes,
	}.Build()
	File_grpcclient_testdata_weather_proto = out.File
	file_grpcclient_testdata_weather_proto_rawDesc = nil
	file_grpcclient_testdata_weather_proto_goTypes = nil
	file_grpcclient_testdata_weather_proto_depIdxs = nil
}
